basePath: /api/v1
definitions:
  keycloak.CreateUserRequest:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      credentials:
        items:
          $ref: '#/definitions/keycloak.Credential'
        type: array
      email:
        type: string
      emailVerified:
        type: boolean
      enabled:
        type: boolean
      firstName:
        type: string
      groups:
        items:
          type: string
        type: array
      lastName:
        type: string
      username:
        type: string
    type: object
  keycloak.Credential:
    properties:
      temporary:
        type: boolean
      type:
        type: string
      value:
        type: string
    type: object
  keycloak.Group:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      id:
        type: string
      name:
        type: string
      path:
        type: string
      subGroups:
        items:
          $ref: '#/definitions/keycloak.Group'
        type: array
    type: object
  keycloak.UpdateUserRequest:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      email:
        type: string
      emailVerified:
        type: boolean
      enabled:
        type: boolean
      firstName:
        type: string
      groups:
        items:
          type: string
        type: array
      lastName:
        type: string
      username:
        type: string
    type: object
  keycloak.UserInfo:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      createdTimestamp:
        type: integer
      email:
        type: string
      emailVerified:
        type: boolean
      enabled:
        type: boolean
      firstName:
        type: string
      groups:
        items:
          type: string
        type: array
      id:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  usecase.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
  usecase.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  usecase.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  usecase.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  usecase.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      role:
        enum:
        - user
        - admin
        - moderator
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  usecase.UpdateProfileRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  usecase.UpdateUserRequest:
    properties:
      first_name:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Un microservicio robusto de autenticación y autorización construido
    en Go siguiendo los principios de Clean Architecture.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Microservicio de Autenticación API
  version: "1.0"
paths:
  /admin/users:
    get:
      consumes:
      - application/json
      description: Lista todos los usuarios con paginación (solo para administradores)
      parameters:
      - default: 0
        description: Offset para paginación
        in: query
        name: offset
        type: integer
      - default: 10
        description: Límite de resultados
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar usuarios
      tags:
      - admin
  /admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un usuario específico (solo para administradores)
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Eliminar usuario
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Actualiza un usuario específico (solo para administradores)
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      - description: Datos del usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Actualizar usuario
      tags:
      - admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica un usuario y retorna tokens de acceso
      parameters:
      - description: Credenciales de login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login de usuario
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Cierra la sesión del usuario revocando el refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Logout de usuario
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Renueva el token de acceso usando un refresh token válido
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Refresh token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registra un nuevo usuario en el sistema
      parameters:
      - description: Datos de registro
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Registro de usuario
      tags:
      - auth
  /auth/register-admin:
    post:
      consumes:
      - application/json
      description: Registra un nuevo usuario administrador en el sistema
      parameters:
      - description: Datos de registro de administrador
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Registro de usuario administrador
      tags:
      - auth
  /keycloak/users:
    get:
      consumes:
      - application/json
      description: Obtiene la lista de todos los usuarios registrados en Keycloak
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/keycloak.UserInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obtener todos los usuarios de Keycloak
      tags:
      - keycloak
    post:
      consumes:
      - application/json
      description: Crea un nuevo usuario en Keycloak
      parameters:
      - description: Datos del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/keycloak.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Crear usuario en Keycloak
      tags:
      - keycloak
  /keycloak/users/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un usuario de Keycloak
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Eliminar usuario de Keycloak
      tags:
      - keycloak
    get:
      consumes:
      - application/json
      description: Obtiene la información de un usuario específico de Keycloak por
        su ID
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/keycloak.UserInfo'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obtener usuario por ID
      tags:
      - keycloak
    put:
      consumes:
      - application/json
      description: Actualiza la información de un usuario existente en Keycloak
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      - description: Datos actualizados del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/keycloak.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Actualizar usuario en Keycloak
      tags:
      - keycloak
  /keycloak/users/{id}/groups:
    get:
      consumes:
      - application/json
      description: Obtiene los grupos a los que pertenece un usuario en Keycloak
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/keycloak.Group'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obtener grupos del usuario
      tags:
      - keycloak
  /keycloak/users/{id}/groups/{group_id}:
    delete:
      consumes:
      - application/json
      description: Remueve un usuario de un grupo específico en Keycloak
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      - description: ID del grupo
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Remover usuario de grupo
      tags:
      - keycloak
    put:
      consumes:
      - application/json
      description: Agrega un usuario a un grupo específico en Keycloak
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: string
      - description: ID del grupo
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Agregar usuario a grupo
      tags:
      - keycloak
  /users/change-password:
    put:
      consumes:
      - application/json
      description: Cambia la contraseña del usuario autenticado
      parameters:
      - description: Datos de cambio de contraseña
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Cambiar contraseña
      tags:
      - users
  /users/profile:
    delete:
      consumes:
      - application/json
      description: Elimina la cuenta del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Eliminar cuenta
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Obtiene el perfil del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Obtener perfil del usuario
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Actualiza el perfil del usuario autenticado
      parameters:
      - description: Datos del perfil
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Actualizar perfil del usuario
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
