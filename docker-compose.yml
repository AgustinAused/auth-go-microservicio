version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - auth_network

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: auth_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - auth_network

  # Microservicio de autenticaci√≥n
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=auth_service
      - DB_SSLMODE=disable
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
      - JWT_ACCESS_EXPIRY=15
      - JWT_REFRESH_EXPIRY=7
      - KEYCLOAK_ENABLED=true
      - KEYCLOAK_BASE_URL=http://keycloak:8080
      - KEYCLOAK_REALM=master
      - KEYCLOAK_CLIENT_ID=auth-service
      - KEYCLOAK_CLIENT_SECRET=your-keycloak-client-secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    networks:
      - auth_network

volumes:
  postgres_data:

networks:
  auth_network:
    driver: bridge 